<jqa:jqassistant-rules xmlns:jqa="http://www.buschmais.com/jqassistant/core/analysis/rules/schema/v1.0">

    <concept id="nmap-rules:CreateService">
        <description>Add to graph the "NetworkService" nodes.</description>
        <cypher><![CDATA[
            MATCH
              (nsi:NetworkServiceInstance)
            WITH DISTINCT nsi.name AS service_name
            MERGE (s:NetworkService {name: service_name})
            RETURN
                service_name AS ServiceName
        ]]></cypher>
    </concept>

    <concept id="nmap-rules:LinkServiceToInstance">
        <requiresConcept refId="nmap-rules:CreateService" />
        <description>Add to graph the relationship between NetworkService and NetworkServiceInstance nodes.</description>
        <cypher><![CDATA[
            MATCH
                (s:NetworkService), (si:NetworkServiceInstance)
            WHERE s.name = si.name
            MERGE (s)-[:HAS_INSTANCE]->(si)
            RETURN
                count(si) as RelationshipsCount
        ]]></cypher>
    </concept>

    <concept id="nmap-rules:MySqlDatabases">
        <description>Add to graph the MySqlSchema nodes.</description>
        <cypher><![CDATA[
            MATCH
               (s:NetworkScript)-[:SCRIPT_ON_PORT]->(port)<-[:SERVICE_ON_PORT]-(serv:NetworkServiceInstance)
            WHERE s.id = 'mysql-databases'
            WITH serv, filter(schema IN split(s.output,' ') WHERE schema <> '') as all_schemas
            UNWIND all_schemas AS schema
            MERGE (ms:MySqlSchema {schema: schema})
            MERGE (ms)-[:RUNS_ON]->(serv)
            RETURN ms
        ]]></cypher>
    </concept>

    <concept id="nmap-rules:OracleSid">
        <description>Add to graph the OracleSid nodes.</description>
        <cypher><![CDATA[
            MATCH
               (s:NetworkScript)-[:SCRIPT_ON_PORT]->(port)<-[:SERVICE_ON_PORT]-(serv:NetworkServiceInstance)
            WHERE s.id = 'oracle-sid-brute'
            WITH serv, filter(schema IN split(replace(s.output,'\\x0D',' '),' ')  WHERE schema <> '') as all_schemas
            UNWIND all_schemas AS schema
            MERGE (ms:OracleSid {sid: schema})
            MERGE (ms)-[:RUNS_ON]->(serv)
            RETURN ms AS sid
        ]]></cypher>
    </concept>
</jqa:jqassistant-rules>

